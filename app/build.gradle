plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.gpstracker.app'
    compileSdk 35

    defaultConfig {
        applicationId "com.gpstracker.app"
        minSdk 24
        targetSdk 35
        versionCode 8
        versionName "1.0.7"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            // 优先使用项目目录下的keystore，回退到系统默认
            if (file("../debug.keystore").exists()) {
                storeFile file("../debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            } else {
                // 回退到Android默认debug签名
                storeFile file(System.getProperty("user.home") + "/.android/debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }
        release {
            // 使用环境变量或项目keystore
            if (System.getenv("KEYSTORE_BASE64")) {
                // 从GitHub Actions环境变量获取签名信息
                storeFile file("release.keystore")
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            } else if (file("../debug.keystore").exists()) {
                // 本地开发使用项目keystore
                storeFile file("../debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            } else {
                // 回退到Android默认debug签名
                storeFile file(System.getProperty("user.home") + "/.android/debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }
    
    lint {
        // 设置Lint基线文件，忽略现有警告
        baseline = file("lint-baseline.xml")
        // 将警告视为错误，但允许基线文件中的警告通过
        warningsAsErrors false
        // 忽略某些特定的警告类型
        disable 'MissingTranslation', 'ExtraTranslation'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    // MQTT依赖 - 尝试使用官方Eclipse Paho库的最新版本
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    
    // 备用：如果官方库有问题，可以切换回hannesa2版本
    // implementation 'com.github.hannesa2:paho.mqtt.android:3.3.5'
    
    // 网络和安全相关依赖
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    implementation 'androidx.concurrent:concurrent-futures:1.1.0'
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
